diff --git a/client/src/components/Header.tsx b/client/src/components/Header.tsx
index 5c361e34f31804ce6112fae14dd038be2bf2fea7..29205ebeae18ecd0d0020798971987d65fa86e63 100644
--- a/client/src/components/Header.tsx
+++ b/client/src/components/Header.tsx
@@ -1,89 +1,97 @@
-import { Link } from "wouter";
+import { Link, useLocation } from "wouter";
 import { Button } from "@/components/ui/button";
 import { Menu, Phone } from "lucide-react";
 import { useState } from "react";
 import {
   Sheet,
   SheetContent,
   SheetTrigger,
 } from "@/components/ui/sheet";
 import logoUrl from "@assets/stagesenior-logo_1758726889154.webp";
 
 export default function Header() {
   const [isOpen, setIsOpen] = useState(false);
+  const [location] = useLocation();
+  const normalizedLocation = location.split("?")[0];
+  const isCommunityDetailPage = /^\/communities\/[^/]+$/.test(normalizedLocation);
+  const showNavigation = !isCommunityDetailPage;
 
   const navigation = [
     { name: "Communities", href: "/communities" },
     { name: "Events", href: "/events" },
     { name: "About Us", href: "/about-us" },
   ];
 
   return (
     <header className="bg-card border-b border-border sticky top-0 z-50" data-testid="header">
       <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
         <div className="flex justify-between items-center h-16">
           <div className="flex items-center">
             <Link href="/" data-testid="logo">
               <img 
                 src={logoUrl} 
                 alt="Stage Senior"
                 className="w-auto h-10 sm:h-12 md:h-14"
               />
             </Link>
           </div>
           
-          <nav className="hidden md:block">
-            <div className="ml-10 flex items-baseline space-x-8">
-              {navigation.map((item) => (
-                <Link
-                  key={item.name}
-                  href={item.href}
-                  className="text-foreground hover:text-primary px-3 py-2 text-xl font-bold transition-colors"
-                  data-testid={`nav-${item.name.toLowerCase()}`}
-                >
-                  {item.name}
-                </Link>
-              ))}
-            </div>
-          </nav>
+          {showNavigation && (
+            <nav className="hidden md:block">
+              <div className="ml-10 flex items-baseline space-x-8">
+                {navigation.map((item) => (
+                  <Link
+                    key={item.name}
+                    href={item.href}
+                    className="text-foreground hover:text-primary px-3 py-2 text-xl font-bold transition-colors"
+                    data-testid={`nav-${item.name.toLowerCase()}`}
+                  >
+                    {item.name}
+                  </Link>
+                ))}
+              </div>
+            </nav>
+          )}
           
           <div className="flex items-center space-x-4">
             <Button
               asChild
               className="bg-primary text-primary-foreground hover:bg-primary/90"
               data-testid="button-call"
             >
               <a href="tel:+1-303-436-2300">
                 <Phone className="w-4 h-4 mr-2" />
                 Call Now
               </a>
             </Button>
             
-            <Sheet open={isOpen} onOpenChange={setIsOpen}>
-              <SheetTrigger asChild>
-                <Button variant="ghost" size="icon" className="md:hidden" data-testid="button-menu">
-                  <Menu className="h-6 w-6" />
-                </Button>
-              </SheetTrigger>
-              <SheetContent side="right" className="w-[300px]">
-                <nav className="flex flex-col space-y-4 mt-8">
-                  {navigation.map((item) => (
-                    <Link
-                      key={item.name}
-                      href={item.href}
-                      className="text-foreground hover:text-primary px-3 py-2 text-xl font-bold transition-colors"
-                      onClick={() => setIsOpen(false)}
-                      data-testid={`mobile-nav-${item.name.toLowerCase()}`}
-                    >
-                      {item.name}
-                    </Link>
-                  ))}
-                </nav>
-              </SheetContent>
-            </Sheet>
+            {showNavigation && (
+              <Sheet open={isOpen} onOpenChange={setIsOpen}>
+                <SheetTrigger asChild>
+                  <Button variant="ghost" size="icon" className="md:hidden" data-testid="button-menu">
+                    <Menu className="h-6 w-6" />
+                  </Button>
+                </SheetTrigger>
+                <SheetContent side="right" className="w-[300px]">
+                  <nav className="flex flex-col space-y-4 mt-8">
+                    {navigation.map((item) => (
+                      <Link
+                        key={item.name}
+                        href={item.href}
+                        className="text-foreground hover:text-primary px-3 py-2 text-xl font-bold transition-colors"
+                        onClick={() => setIsOpen(false)}
+                        data-testid={`mobile-nav-${item.name.toLowerCase()}`}
+                      >
+                        {item.name}
+                      </Link>
+                    ))}
+                  </nav>
+                </SheetContent>
+              </Sheet>
+            )}
           </div>
         </div>
       </div>
     </header>
   );
 }
diff --git a/client/src/pages/community-detail.tsx b/client/src/pages/community-detail.tsx
index a616724e3db24e00e40fd4222687a6a0afa0121a..1de51f2563d80089fe36f5c460e2e08e9dfb435a 100644
--- a/client/src/pages/community-detail.tsx
+++ b/client/src/pages/community-detail.tsx
@@ -1,75 +1,77 @@
 import { useParams } from "wouter";
 import { useQuery } from "@tanstack/react-query";
-import { useState } from "react";
+import { useEffect, useMemo, useState } from "react";
 import { Button } from "@/components/ui/button";
 import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
 import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
 import { Skeleton } from "@/components/ui/skeleton";
 import { Input } from "@/components/ui/input";
 import { Separator } from "@/components/ui/separator";
 import EventCard from "@/components/EventCard";
 import FloorPlanModal from "@/components/FloorPlanModal";
 import { 
   MapPin, 
   Phone, 
   Calendar, 
   Mail,
   Star,
   Shield,
   ChevronLeft,
   Home,
   Users,
   Sparkles,
   Image,
   MessageSquare,
   Wifi,
   Car,
   Coffee,
   Heart,
   Activity,
   BookOpen,
   Clock,
   DollarSign,
   CheckCircle,
   ChevronRight,
   Bath,
   Bed,
   Square,
   Download,
   ArrowRight
 } from "lucide-react";
 import { Link } from "wouter";
+import { cn } from "@/lib/utils";
 import type { Community, Event, Faq, Gallery, FloorPlan, Testimonial, GalleryImage, Post } from "@shared/schema";
 
 export default function CommunityDetail() {
   const params = useParams();
   const slug = params.slug;
   const [selectedFloorPlan, setSelectedFloorPlan] = useState<FloorPlan | null>(null);
   const [isFloorPlanModalOpen, setIsFloorPlanModalOpen] = useState(false);
   const [selectedGalleryCategory, setSelectedGalleryCategory] = useState<string | null>(null);
+  const [activeSection, setActiveSection] = useState<string | null>("overview");
 
   const { data: community, isLoading: communityLoading } = useQuery<Community>({
     queryKey: [`/api/communities/${slug}`],
     enabled: !!slug,
   });
 
   const { data: events = [] } = useQuery<Event[]>({
     queryKey: [`/api/events?communityId=${community?.id}&upcoming=true`],
     enabled: !!community?.id,
   });
 
   const { data: faqs = [] } = useQuery<Faq[]>({
     queryKey: [`/api/faqs?communityId=${community?.id}&active=true`],
     enabled: !!community?.id,
   });
 
   const { data: galleries = [] } = useQuery<Gallery[]>({
     queryKey: [`/api/galleries?communityId=${community?.id}&active=true`],
     enabled: !!community?.id,
   });
 
   const { data: floorPlans = [] } = useQuery<FloorPlan[]>({
     queryKey: [`/api/floor-plans?communityId=${community?.id}&active=true`],
     enabled: !!community?.id,
   });
@@ -132,50 +134,176 @@ export default function CommunityDetail() {
           </CardContent>
         </Card>
       </div>
     );
   }
 
   const formatPrice = (price: number | null) => {
     if (!price) return "Contact for pricing";
     return `$${price.toLocaleString()}`;
   };
 
   const getAmenityIcon = (amenity: string) => {
     const amenityLower = amenity.toLowerCase();
     if (amenityLower.includes('dining')) return Coffee;
     if (amenityLower.includes('wifi') || amenityLower.includes('internet')) return Wifi;
     if (amenityLower.includes('transport')) return Car;
     if (amenityLower.includes('fitness') || amenityLower.includes('gym')) return Activity;
     if (amenityLower.includes('library') || amenityLower.includes('learn')) return BookOpen;
     if (amenityLower.includes('health') || amenityLower.includes('medical')) return Heart;
     if (amenityLower.includes('social') || amenityLower.includes('community')) return Users;
     return Sparkles;
   };
 
   const galleryCategories = Array.from(new Set(galleryImages.map(img => img.category).filter(Boolean)));
 
+  const hasAmenities = Boolean(
+    (community as any).amenitiesData?.length || community.amenities?.length
+  );
+  const hasFloorPlans = floorPlans.length > 0;
+  const hasGallery = galleryImages.length > 0;
+  const hasEvents = events.length > 0;
+  const hasTestimonials = testimonials.length > 0;
+  const hasPosts = posts.length > 0;
+  const hasFaqs = faqs.length > 0;
+
+  const navSections = useMemo(() => {
+    const sections: { id: string; label: string }[] = [
+      { id: "overview", label: "Overview" },
+      { id: "highlights", label: "Highlights" },
+    ];
+
+    if (hasAmenities) {
+      sections.push({ id: "amenities", label: "Amenities" });
+    }
+
+    if (hasFloorPlans) {
+      sections.push({ id: "floor-plans", label: "Floor Plans & Pricing" });
+    }
+
+    if (hasGallery) {
+      sections.push({ id: "gallery", label: "Gallery" });
+    }
+
+    if (hasEvents) {
+      sections.push({ id: "events", label: "Events" });
+    }
+
+    if (hasTestimonials) {
+      sections.push({ id: "testimonials", label: "Testimonials" });
+    }
+
+    if (hasPosts) {
+      sections.push({ id: "news", label: "News" });
+    }
+
+    if (hasFaqs) {
+      sections.push({ id: "faqs", label: "FAQs" });
+    }
+
+    sections.push({ id: "neighborhood", label: "Neighborhood" });
+    sections.push({ id: "contact", label: "Contact" });
+
+    return sections;
+  }, [hasAmenities, hasFloorPlans, hasGallery, hasEvents, hasTestimonials, hasPosts, hasFaqs]);
+
+  useEffect(() => {
+    if (!navSections.length) {
+      setActiveSection(null);
+      return;
+    }
+
+    setActiveSection((current) => {
+      if (current && navSections.some((section) => section.id === current)) {
+        return current;
+      }
+
+      return navSections[0].id;
+    });
+  }, [navSections]);
+
+  useEffect(() => {
+    if (!navSections.length) {
+      return;
+    }
+
+    const observer = new IntersectionObserver(
+      (entries) => {
+        const visibleEntries = entries
+          .filter((entry) => entry.isIntersecting)
+          .sort((a, b) => a.boundingClientRect.top - b.boundingClientRect.top);
+
+        const fallbackEntries = [...entries].sort(
+          (a, b) => Math.abs(a.boundingClientRect.top) - Math.abs(b.boundingClientRect.top)
+        );
+
+        const nextActiveEntry = visibleEntries[0] ?? fallbackEntries[0];
+        const nextActiveId =
+          nextActiveEntry?.target instanceof HTMLElement ? nextActiveEntry.target.id : null;
+
+        if (nextActiveId) {
+          setActiveSection(nextActiveId);
+        }
+      },
+      {
+        rootMargin: "-150px 0px -60%",
+        threshold: [0.1, 0.25, 0.5],
+      }
+    );
+
+    const elements = navSections
+      .map((section) => document.getElementById(section.id))
+      .filter((element): element is HTMLElement => Boolean(element));
+
+    elements.forEach((element) => observer.observe(element));
+
+    return () => {
+      observer.disconnect();
+    };
+  }, [navSections]);
+
+  const handleNavClick = (sectionId: string) => {
+    const element = document.getElementById(sectionId);
+    if (!element) {
+      return;
+    }
+
+    const headerElement = document.querySelector<HTMLElement>('[data-testid="header"]');
+    const navElement = document.querySelector<HTMLElement>('[data-community-sticky-nav]');
+    const offset = (headerElement?.offsetHeight ?? 0) + (navElement?.offsetHeight ?? 0) + 16;
+
+    const elementPosition = element.getBoundingClientRect().top + window.scrollY;
+    const offsetPosition = elementPosition - offset;
+
+    window.scrollTo({
+      top: offsetPosition < 0 ? 0 : offsetPosition,
+      behavior: "smooth",
+    });
+
+    setActiveSection(sectionId);
+  };
+
   return (
     <div className="min-h-screen bg-white">
       {/* Hero Section */}
       <section className="relative h-[500px] md:h-[600px] overflow-hidden">
         <img
           src={community.heroImageUrl || `https://images.unsplash.com/photo-1416879595882-3373a0480b5b?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=600`}
           alt={`${community.name} - Senior Living Community`}
           className="w-full h-full object-cover"
           data-testid="hero-image"
         />
         <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/40 to-black/20" />
         
         {/* Back Button */}
         <div className="absolute top-0 left-0 right-0 p-4 md:p-6 lg:p-8 z-20">
           <Button 
             variant="ghost" 
             className="text-white hover:bg-white/20" 
             asChild
             data-testid="button-back"
           >
             <Link href="/communities">
               <ChevronLeft className="w-4 h-4 mr-2" />
               Back to Communities
             </Link>
           </Button>
@@ -189,117 +317,144 @@ export default function CommunityDetail() {
             </h1>
             <div className="flex items-center text-white/90 text-lg mb-4" data-testid="community-location">
               <MapPin className="w-5 h-5 mr-2" />
               {community.address || `${community.city}, ${community.state} ${community.zipCode}`}
             </div>
             {community.careTypes && community.careTypes.length > 0 && (
               <div className="flex flex-wrap gap-2">
                 {community.careTypes.map((careType) => (
                   <Badge 
                     key={careType} 
                     variant="secondary"
                     className="bg-white/20 text-white border-white/30 backdrop-blur-sm text-sm px-3 py-1"
                     data-testid={`care-type-${careType}`}
                   >
                     {careType.split('-').map(word => 
                       word.charAt(0).toUpperCase() + word.slice(1)
                     ).join(' ')}
                   </Badge>
                 ))}
               </div>
             )}
           </div>
         </div>
       </section>
 
+      {navSections.length > 0 && (
+        <div
+          className="bg-white/95 backdrop-blur border-b border-border sticky top-16 z-40"
+          data-community-sticky-nav
+        >
+          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
+            <nav className="flex gap-2 overflow-x-auto py-3" aria-label="Community sections">
+              {navSections.map((section) => (
+                <button
+                  key={section.id}
+                  type="button"
+                  onClick={() => handleNavClick(section.id)}
+                  className={cn(
+                    "px-4 py-2 rounded-full border text-sm font-medium transition-colors whitespace-nowrap",
+                    activeSection === section.id
+                      ? "bg-primary text-primary-foreground border-primary shadow-sm"
+                      : "bg-transparent text-muted-foreground border-border hover:bg-primary/10"
+                  )}
+                >
+                  {section.label}
+                </button>
+              ))}
+            </nav>
+          </div>
+        </div>
+      )}
+
       {/* Main Content with Sticky Sidebar */}
       <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
         <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
           {/* Main Content */}
           <div className="lg:col-span-2 space-y-16">
             {/* Overview Section */}
-            <section>
+            <section id="overview" className="scroll-mt-32">
               <h2 className="text-3xl font-bold mb-6" data-testid="overview-title">
                 Welcome to {community.name}
               </h2>
               <p className="text-lg text-gray-600 leading-relaxed mb-6" data-testid="community-description">
                 {community.description || community.shortDescription || 
                   "Experience exceptional senior living in a warm, welcoming community designed with your comfort and well-being in mind. Our dedicated team provides personalized care and support, ensuring every resident enjoys a fulfilling lifestyle."}
               </p>
               <p className="text-gray-600 leading-relaxed">
                 At {community.name}, we believe in fostering a fulfilling lifestyle for our residents. Living in our community makes it easy to nurture your mind, body, and spirit—whether it's over a meal or during a group activity. With daily opportunities for creativity, learning, fitness, and social connections, you'll discover ways to ignite your passions and uncover new possibilities.
               </p>
             </section>
 
             {/* Features & Highlights */}
-            <section>
+            <section id="highlights" className="scroll-mt-32">
               <h2 className="text-3xl font-bold mb-8">Community Highlights</h2>
               <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                 <Card className="border-l-4 border-l-primary">
                   <CardContent className="p-6">
                     <Users className="w-10 h-10 text-primary mb-4" />
                     <h3 className="text-xl font-semibold mb-2">Vibrant Community Life</h3>
                     <p className="text-gray-600">
                       Join a warm community where friendships flourish and every day brings new opportunities for connection and growth.
                     </p>
                   </CardContent>
                 </Card>
                 <Card className="border-l-4 border-l-primary">
                   <CardContent className="p-6">
                     <Heart className="w-10 h-10 text-primary mb-4" />
                     <h3 className="text-xl font-semibold mb-2">Personalized Care</h3>
                     <p className="text-gray-600">
                       Our dedicated team provides tailored support that honors your independence while ensuring comfort and safety.
                     </p>
                   </CardContent>
                 </Card>
                 <Card className="border-l-4 border-l-primary">
                   <CardContent className="p-6">
                     <Activity className="w-10 h-10 text-primary mb-4" />
                     <h3 className="text-xl font-semibold mb-2">Active Lifestyle</h3>
                     <p className="text-gray-600">
                       From fitness classes to cultural outings, enjoy a full calendar of activities designed to keep you engaged.
                     </p>
                   </CardContent>
                 </Card>
                 <Card className="border-l-4 border-l-primary">
                   <CardContent className="p-6">
                     <Shield className="w-10 h-10 text-primary mb-4" />
                     <h3 className="text-xl font-semibold mb-2">24/7 Support</h3>
                     <p className="text-gray-600">
                       Rest easy knowing our caring staff is available around the clock for assistance whenever you need it.
                     </p>
                   </CardContent>
                 </Card>
               </div>
             </section>
 
             {/* Amenities Showcase */}
-            {(community.amenitiesData || community.amenities) && 
-             ((community.amenitiesData && community.amenitiesData.length > 0) || 
+            {(community.amenitiesData || community.amenities) &&
+             ((community.amenitiesData && community.amenitiesData.length > 0) ||
               (community.amenities && community.amenities.length > 0)) && (
-              <section>
+              <section id="amenities" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">Amenities & Services</h2>
                 <div className="bg-gray-50 rounded-2xl p-8">
                   <p className="text-lg text-gray-600 mb-8">
                     Step into a lifestyle where every day feels like a retreat. Our community is packed with thoughtful amenities designed to make life easier and more enjoyable.
                   </p>
                   {/* Show featured amenities with images first if available */}
                   {(community as any).amenitiesData && 
                    (community as any).amenitiesData.filter((am: any) => am.imageUrl).length > 0 && (
                     <div className="mb-8">
                       <h3 className="text-xl font-semibold mb-4">Featured Amenities</h3>
                       <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                         {(community as any).amenitiesData
                           .filter((am: any) => am.imageUrl)
                           .map((amenity: any, index: number) => {
                             const IconComponent = amenity.icon ? 
                               (amenity.icon === 'Utensils' ? Coffee : 
                                amenity.icon === 'Coffee' ? Coffee :
                                amenity.icon === 'Car' ? Car :
                                amenity.icon === 'Activity' ? Activity :
                                amenity.icon === 'BookOpen' ? BookOpen :
                                amenity.icon === 'Heart' ? Heart :
                                amenity.icon === 'Users' ? Users :
                                amenity.icon === 'Wifi' ? Wifi :
                                Sparkles) : 
                               getAmenityIcon(amenity.name);
@@ -356,51 +511,51 @@ export default function CommunityDetail() {
                            amenity.icon === 'BookOpen' ? BookOpen :
                            amenity.icon === 'Heart' ? Heart :
                            amenity.icon === 'Users' ? Users :
                            amenity.icon === 'Wifi' ? Wifi :
                            Sparkles) : 
                           getAmenityIcon(amenityName));
                       
                       return (
                         <div 
                           key={`amenity-${index}`}
                           className="flex items-center space-x-3 bg-white rounded-lg p-4"
                           data-testid={`amenity-${index}`}
                         >
                           <IconComponent className="w-8 h-8 text-primary flex-shrink-0" />
                           <span className="text-sm font-medium">{amenityName}</span>
                         </div>
                       );
                     })}
                   </div>
                 </div>
               </section>
             )}
 
             {/* Floor Plans Section */}
             {floorPlans.length > 0 && (
-              <section>
+              <section id="floor-plans" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">Floor Plans & Pricing</h2>
                 <p className="text-lg text-gray-600 mb-8">
                   Each apartment home is designed for comfort and independence, with modern conveniences and thoughtful layouts.
                 </p>
                 <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                   {floorPlans.slice(0, 4).map((floorPlan) => (
                     <Card 
                       key={floorPlan.id} 
                       className="overflow-hidden hover:shadow-xl transition-shadow cursor-pointer group" 
                       onClick={() => {
                         setSelectedFloorPlan(floorPlan);
                         setIsFloorPlanModalOpen(true);
                       }}
                       data-testid={`floor-plan-${floorPlan.id}`}
                     >
                       {floorPlan.imageUrl && (
                         <div className="relative h-48 bg-gray-100">
                           <img
                             src={floorPlan.imageUrl}
                             alt={`${floorPlan.name} floor plan`}
                             className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                             data-testid={`floor-plan-image-${floorPlan.id}`}
                           />
                         </div>
                       )}
@@ -446,51 +601,51 @@ export default function CommunityDetail() {
                     <Button variant="outline" size="lg" data-testid="button-view-all-floor-plans">
                       View All {floorPlans.length} Floor Plans
                     </Button>
                   </div>
                 )}
               </section>
             )}
 
             {/* Featured Image Section */}
             {community.heroImageUrl && (
               <section>
                 <h2 className="text-3xl font-bold mb-8">Experience Our Community</h2>
                 <div className="rounded-2xl overflow-hidden shadow-2xl mb-12">
                   <img
                     src={community.heroImageUrl}
                     alt={`${community.name} - Featured Image`}
                     className="w-full h-[400px] object-cover"
                     data-testid="featured-image"
                   />
                 </div>
               </section>
             )}
 
             {/* Photo Gallery */}
             {galleryImages.length > 0 && (
-              <section>
+              <section id="gallery" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">Photo Gallery</h2>
                 <p className="text-lg text-gray-600 mb-8">
                   Explore our bright, comfortable spaces and serene outdoor areas through our community gallery.
                 </p>
 
                 {/* Category Filters */}
                 {galleryCategories.length > 0 && (
                   <div className="flex flex-wrap gap-2 mb-8">
                     <Button
                       variant={selectedGalleryCategory === null ? "default" : "outline"}
                       size="sm"
                       onClick={() => setSelectedGalleryCategory(null)}
                       data-testid="gallery-filter-all"
                     >
                       All Photos
                     </Button>
                     {galleryCategories.map((category) => (
                       <Button
                         key={category}
                         variant={selectedGalleryCategory === category ? "default" : "outline"}
                         size="sm"
                         onClick={() => setSelectedGalleryCategory(category)}
                         data-testid={`gallery-filter-${category}`}
                       >
                         {category}
@@ -501,115 +656,115 @@ export default function CommunityDetail() {
 
                 {/* Gallery Grid */}
                 <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                   {galleryImages
                     .filter(img => !selectedGalleryCategory || img.category === selectedGalleryCategory)
                     .slice(0, 9)
                     .map((image) => (
                       <div 
                         key={image.id} 
                         className="group cursor-pointer aspect-video rounded-lg overflow-hidden"
                         data-testid={`gallery-image-${image.id}`}
                       >
                         <img
                           src={image.url}
                           alt={image.caption || `${community.name} gallery`}
                           className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
                         />
                       </div>
                     ))}
                 </div>
               </section>
             )}
 
             {/* Events & Activities - Full Width */}
             {events.length > 0 && (
-              <section>
+              <section id="events" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">Upcoming Events</h2>
                 <div className="space-y-6">
                   {events.slice(0, 4).map((event) => (
                     <div key={event.id} className="w-full">
                       <EventCard event={event} />
                     </div>
                   ))}
                 </div>
                 {events.length > 4 && (
                   <div className="text-center mt-8">
                     <Button variant="outline" size="lg" asChild data-testid="button-view-all-events">
                       <Link href="/events">
                         View All Events
                         <ChevronRight className="w-4 h-4 ml-2" />
                       </Link>
                     </Button>
                   </div>
                 )}
               </section>
             )}
 
             {/* Testimonials */}
             {testimonials.length > 0 && (
-              <section>
+              <section id="testimonials" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">What Residents & Families Say</h2>
                 <div className="space-y-6">
                   {testimonials.slice(0, 3).map((testimonial) => (
                     <Card key={testimonial.id} className="border-l-4 border-l-primary" data-testid={`testimonial-${testimonial.id}`}>
                       <CardContent className="p-8">
                         <blockquote className="text-lg text-gray-700 italic mb-6" data-testid={`testimonial-content-${testimonial.id}`}>
                           "{testimonial.content}"
                         </blockquote>
                         <div className="flex items-center justify-between">
                           <div>
                             <p className="font-semibold text-gray-900" data-testid={`testimonial-author-${testimonial.id}`}>
                               {testimonial.authorName}
                             </p>
                             {testimonial.authorRelation && (
                               <p className="text-sm text-gray-600" data-testid={`testimonial-relation-${testimonial.id}`}>
                                 {testimonial.authorRelation}
                               </p>
                             )}
                           </div>
                           {testimonial.rating && (
                             <div className="flex items-center gap-1" data-testid={`testimonial-rating-${testimonial.id}`}>
                               {Array.from({ length: 5 }).map((_, i) => (
                                 <Star 
                                   key={i} 
                                   className={`w-5 h-5 ${i < (testimonial.rating || 0) ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300'}`} 
                                 />
                               ))}
                             </div>
                           )}
                         </div>
                       </CardContent>
                     </Card>
                   ))}
                 </div>
               </section>
             )}
 
             {/* Blog Posts */}
             {posts.length > 0 && (
-              <section>
+              <section id="news" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">News & Updates from {community.name}</h2>
                 <p className="text-lg text-gray-600 mb-8">
                   Stay informed about the latest happenings, stories, and updates from our community.
                 </p>
                 <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                   {posts.slice(0, 4).map((post) => (
                     <Card key={post.id} className="hover:shadow-xl transition-shadow cursor-pointer" data-testid={`blog-post-${post.id}`}>
                       {post.heroImageUrl && (
                         <div className="h-48 overflow-hidden">
                           <img 
                             src={post.heroImageUrl} 
                             alt={post.title}
                             className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                           />
                         </div>
                       )}
                       <CardContent className="p-6">
                         <div className="flex items-center gap-2 mb-3">
                           <Badge variant="secondary" className="text-xs">
                             {new Date(post.publishedAt || post.createdAt).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}
                           </Badge>
                           {post.tags && post.tags.length > 0 && (
                             <Badge variant="outline" className="text-xs">
                               {post.tags[0]}
                             </Badge>
@@ -624,79 +779,79 @@ export default function CommunityDetail() {
                         <Button variant="link" className="p-0 h-auto text-primary hover:text-primary/80" asChild>
                           <Link href={`/blog/${post.slug}`}>
                             Read More
                             <ArrowRight className="w-4 h-4 ml-1" />
                           </Link>
                         </Button>
                       </CardContent>
                     </Card>
                   ))}
                 </div>
                 {posts.length > 4 && (
                   <div className="text-center mt-8">
                     <Button variant="outline" size="lg" asChild data-testid="button-view-all-posts">
                       <Link href="/blog">
                         View All Articles
                         <ChevronRight className="w-4 h-4 ml-2" />
                       </Link>
                     </Button>
                   </div>
                 )}
               </section>
             )}
 
             {/* FAQs */}
             {faqs.length > 0 && (
-              <section>
+              <section id="faqs" className="scroll-mt-32">
                 <h2 className="text-3xl font-bold mb-8">Frequently Asked Questions</h2>
                 <Accordion type="single" collapsible className="space-y-4">
                   {faqs.slice(0, 6).map((faq) => (
                     <AccordionItem key={faq.id} value={faq.id} className="border rounded-lg px-6 bg-gray-50" data-testid={`faq-${faq.id}`}>
                       <AccordionTrigger className="text-left hover:no-underline py-4 text-lg" data-testid={`faq-question-${faq.id}`}>
                         {faq.question}
                       </AccordionTrigger>
                       <AccordionContent className="pb-4 text-gray-600" data-testid={`faq-answer-${faq.id}`}>
                         {faq.answer}
                       </AccordionContent>
                     </AccordionItem>
                   ))}
                 </Accordion>
                 {faqs.length > 6 && (
                   <div className="text-center mt-8">
                     <Button variant="outline" size="lg" asChild data-testid="button-view-all-faqs">
                       <Link href="/faqs">
                         View All FAQs
                         <ChevronRight className="w-4 h-4 ml-2" />
                       </Link>
                     </Button>
                   </div>
                 )}
               </section>
             )}
 
             {/* Location & Neighborhood */}
-            <section>
+            <section id="neighborhood" className="scroll-mt-32">
               <h2 className="text-3xl font-bold mb-8">Location & Neighborhood</h2>
               <div className="bg-gray-100 rounded-xl h-96 mb-6" data-testid="map-placeholder">
                 <div className="w-full h-full flex items-center justify-center text-gray-500">
                   <div className="text-center">
                     <MapPin className="w-12 h-12 mx-auto mb-4" />
                     <p className="text-lg font-medium">{community.address}</p>
                     <p>{community.city}, {community.state} {community.zipCode}</p>
                   </div>
                 </div>
               </div>
               <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                 <Card>
                   <CardContent className="p-6">
                     <h3 className="font-semibold mb-3">Nearby Healthcare</h3>
                     <ul className="space-y-2 text-gray-600">
                       <li>• St. Joseph Hospital - 5 miles</li>
                       <li>• Kaiser Permanente - 3 miles</li>
                       <li>• CVS Pharmacy - 0.5 miles</li>
                     </ul>
                   </CardContent>
                 </Card>
                 <Card>
                   <CardContent className="p-6">
                     <h3 className="font-semibold mb-3">Local Amenities</h3>
                     <ul className="space-y-2 text-gray-600">
@@ -849,51 +1004,51 @@ export default function CommunityDetail() {
               {/* Mini Map */}
               <Card className="shadow-lg">
                 <CardContent className="p-0">
                   <div className="h-48 bg-gray-100 rounded-lg flex items-center justify-center" data-testid="mini-map">
                     <div className="text-center text-gray-500">
                       <MapPin className="w-8 h-8 mx-auto mb-2" />
                       <p className="text-sm font-medium">{community.city}, {community.state}</p>
                       <Button 
                         variant="link" 
                         size="sm" 
                         className="mt-2"
                         data-testid="button-get-directions"
                       >
                         Get Directions →
                       </Button>
                     </div>
                   </div>
                 </CardContent>
               </Card>
             </div>
           </div>
         </div>
       </div>
 
       {/* Full Width CTA Section */}
-      <section className="bg-primary text-white py-16 mt-16">
+      <section id="contact" className="bg-primary text-white py-16 mt-16 scroll-mt-32">
         <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
           <h2 className="text-3xl md:text-4xl font-bold mb-6">
             Ready to Experience {community.name}?
           </h2>
           <p className="text-xl mb-8 opacity-90">
             Join our community of residents who are living their best life. Schedule a personalized tour today.
           </p>
           <div className="flex flex-col sm:flex-row gap-4 justify-center">
             <Button 
               size="lg" 
               variant="secondary"
               className="text-lg"
               data-testid="button-schedule-tour-cta"
             >
               <Calendar className="w-5 h-5 mr-2" />
               Schedule Your Tour
             </Button>
             <Button 
               size="lg" 
               variant="outline"
               className="bg-transparent text-white border-white hover:bg-white hover:text-primary text-lg"
               asChild
               data-testid="button-call-cta"
             >
               <a href={`tel:${community.phone || '+1-303-436-2300'}`}>
